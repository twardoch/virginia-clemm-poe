name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
        
    - name: Install dependencies
      run: uv sync --all-extras --dev
      
    - name: Run ruff linting
      run: uvx ruff check src/ tests/
      
    - name: Run ruff formatting check  
      run: uvx ruff format --check src/ tests/
      
    - name: Run mypy type checking
      run: uvx mypy src/
      
    - name: Run bandit security check
      run: uvx bandit -r src/ -c pyproject.toml
      
    - name: Check for missing __init__.py files
      run: |
        find src/ -type d -exec test -f {}/__init__.py \; -o -print | grep -v __pycache__ | head -10
        if [ $? -eq 0 ]; then
          echo "Missing __init__.py files found"
          exit 1
        fi

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
        
    - name: Install dependencies
      run: uv sync --all-extras --dev
      
    - name: Install browsers for playwright
      run: |
        # Install system dependencies for headless browser testing
        sudo apt-get update
        sudo apt-get install -y xvfb
        
    - name: Run unit tests
      run: |
        # Run tests with coverage in headless mode
        xvfb-run -a uvx pytest tests/ -m "not integration" --cov=virginia_clemm_poe --cov-report=xml --cov-report=term-missing
      env:
        DISPLAY: :99
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'test-integration'))
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install uv  
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
        
    - name: Install dependencies
      run: uv sync --all-extras --dev
      
    - name: Install browsers for playwright
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb google-chrome-stable
        
    - name: Run integration tests
      run: |
        xvfb-run -a uvx pytest tests/ -m "integration" --tb=short
      env:
        DISPLAY: :99
        POE_API_KEY: ${{ secrets.POE_API_KEY }}
      continue-on-error: true  # Integration tests may fail due to external dependencies

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for version calculation
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
        
    - name: Build package
      run: |
        uv build
        
    - name: Check package contents
      run: |
        uvx twine check dist/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
        
    - name: Install dependencies
      run: uv sync --dev
      
    - name: Run safety check
      run: uvx safety check --json || true  # Don't fail CI on safety issues
      
    - name: Run semgrep security scan
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/python
      continue-on-error: true  # Don't fail CI on semgrep issues